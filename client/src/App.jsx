import React, { useState } from 'react';
import './App.css';

function App() {
  const [prompt, setPrompt] = useState('');
  const [story, setStory] = useState('');
  const [imagePrompt, setImagePrompt] = useState('');
  const [imageResult, setImageResult] = useState(null);
  const [language, setLanguage] = useState('uk');
  const [loading, setLoading] = useState(false);

  const handleGenerateStory = async () => {
    if (!prompt.trim()) return;
    setLoading(true);
    setStory('');

    try {
      const response = await fetch('http://localhost:3001/generate-text', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ prompt, language }),
      });

      const data = await response.json();
      setStory(data.story);
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —ñ—Å—Ç–æ—Ä—ñ—ó:', error);
      setStory('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Ç—ñ –¥–æ —Å–µ—Ä–≤–µ—Ä–∞.');
    } finally {
      setLoading(false);
    }
  };

  const handleGenerateImage = async () => {
    if (!imagePrompt.trim()) return;
    setLoading(true);
    setImageResult(null);

    try {
      const response = await fetch('http://localhost:3001/generate-image', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ prompt: imagePrompt, language }),
      });

      const data = await response.json();
      setImageResult(data.imageUrl);
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è:', error);
      setImageResult('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Ç—ñ –¥–æ —Å–µ—Ä–≤–µ—Ä–∞.');
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="container">
      <h1 className="title">üåê Multilang AI Story App</h1>

      <select className="language-select" value={language} onChange={(e) => setLanguage(e.target.value)}>
        <option value="uk">–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞</option>
        <option value="es">–Ü—Å–ø–∞–Ω—Å—å–∫–∞</option>
        <option value="ru">–†–æ—Å—ñ–π—Å—å–∫–∞</option>
        <option value="fr">–§—Ä–∞–Ω—Ü—É–∑—å–∫–∞</option>
        <option value="pt">–ü–æ—Ä—Ç—É–≥–∞–ª—å—Å—å–∫–∞</option>
        <option value="it">–Ü—Ç–∞–ª—ñ–π—Å—å–∫–∞</option>
        <option value="de">–ù—ñ–º–µ—Ü—å–∫–∞</option>
        <option value="ja">–Ø–ø–æ–Ω—Å—å–∫–∞</option>
        <option value="pl">–ü–æ–ª—å—Å—å–∫–∞</option>
        <option value="ar">–ê—Ä–∞–±—Å—å–∫–∞</option>
        <option value="tr">–¢—É—Ä–µ—Ü—å–∫–∞</option>
        <option value="ro">–†—É–º—É–Ω—Å—å–∫–∞</option>
        <option value="ko">–ö–æ—Ä–µ–π—Å—å–∫–∞</option>
        <option value="nl">–ù—ñ–¥–µ—Ä–ª–∞–Ω–¥—Å—å–∫–∞</option>
        <option value="el">–ì—Ä–µ—Ü—å–∫–∞</option>
        <option value="id">–Ü–Ω–¥–æ–Ω–µ–∑—ñ–π—Å—å–∫–∞</option>
      </select>

      <div className="section">
        <h2>üìù –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —ñ—Å—Ç–æ—Ä—ñ—ó</h2>
        <textarea
          className="prompt-box"
          placeholder="–í–≤–µ–¥–∏ —Ç–µ–º—É –∞–±–æ —Å—é–∂–µ—Ç..."
          value={prompt}
          onChange={(e) => setPrompt(e.target.value)}
        />
        <button className="generate-button" onClick={handleGenerateStory} disabled={loading}>
          {loading ? '‚è≥ –ì–µ–Ω–µ—Ä—É—î—Ç—å—Å—è...' : '‚ú® –ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ —ñ—Å—Ç–æ—Ä—ñ—é'}
        </button>
        {story && <div className="result-box">{story}</div>}
      </div>

      <div className="section">
        <h2>üé® –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è</h2>
        <input
          className="prompt-box"
          placeholder="–û–ø–∏—Å –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è..."
          value={imagePrompt}
          onChange={(e) => setImagePrompt(e.target.value)}
        />
        <button className="generate-button" onClick={handleGenerateImage} disabled={loading}>
          {loading ? '‚è≥ –ì–µ–Ω–µ—Ä—É—î—Ç—å—Å—è...' : 'üñºÔ∏è –ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è'}
        </button>
        {imageResult && <div className="result-box"><img src={imageResult} alt="Generated visual" /></div>}
      </div>
    </div>
  );
}

export default App;
